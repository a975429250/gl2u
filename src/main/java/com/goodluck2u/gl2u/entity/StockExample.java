package com.goodluck2u.gl2u.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class StockExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table stock
     *
     * @mbg.generated Wed Mar 04 20:59:48 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table stock
     *
     * @mbg.generated Wed Mar 04 20:59:48 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table stock
     *
     * @mbg.generated Wed Mar 04 20:59:48 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock
     *
     * @mbg.generated Wed Mar 04 20:59:48 CST 2020
     */
    public StockExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock
     *
     * @mbg.generated Wed Mar 04 20:59:48 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock
     *
     * @mbg.generated Wed Mar 04 20:59:48 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock
     *
     * @mbg.generated Wed Mar 04 20:59:48 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock
     *
     * @mbg.generated Wed Mar 04 20:59:48 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock
     *
     * @mbg.generated Wed Mar 04 20:59:48 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock
     *
     * @mbg.generated Wed Mar 04 20:59:48 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock
     *
     * @mbg.generated Wed Mar 04 20:59:48 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock
     *
     * @mbg.generated Wed Mar 04 20:59:48 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock
     *
     * @mbg.generated Wed Mar 04 20:59:48 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table stock
     *
     * @mbg.generated Wed Mar 04 20:59:48 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table stock
     *
     * @mbg.generated Wed Mar 04 20:59:48 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("ID like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("ID not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("NAME is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("NAME is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("NAME =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("NAME <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("NAME >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("NAME >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("NAME <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("NAME <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("NAME like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("NAME not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("NAME in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("NAME not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("NAME between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("NAME not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andStockNumIsNull() {
            addCriterion("STOCK_NUM is null");
            return (Criteria) this;
        }

        public Criteria andStockNumIsNotNull() {
            addCriterion("STOCK_NUM is not null");
            return (Criteria) this;
        }

        public Criteria andStockNumEqualTo(String value) {
            addCriterion("STOCK_NUM =", value, "stockNum");
            return (Criteria) this;
        }

        public Criteria andStockNumNotEqualTo(String value) {
            addCriterion("STOCK_NUM <>", value, "stockNum");
            return (Criteria) this;
        }

        public Criteria andStockNumGreaterThan(String value) {
            addCriterion("STOCK_NUM >", value, "stockNum");
            return (Criteria) this;
        }

        public Criteria andStockNumGreaterThanOrEqualTo(String value) {
            addCriterion("STOCK_NUM >=", value, "stockNum");
            return (Criteria) this;
        }

        public Criteria andStockNumLessThan(String value) {
            addCriterion("STOCK_NUM <", value, "stockNum");
            return (Criteria) this;
        }

        public Criteria andStockNumLessThanOrEqualTo(String value) {
            addCriterion("STOCK_NUM <=", value, "stockNum");
            return (Criteria) this;
        }

        public Criteria andStockNumLike(String value) {
            addCriterion("STOCK_NUM like", value, "stockNum");
            return (Criteria) this;
        }

        public Criteria andStockNumNotLike(String value) {
            addCriterion("STOCK_NUM not like", value, "stockNum");
            return (Criteria) this;
        }

        public Criteria andStockNumIn(List<String> values) {
            addCriterion("STOCK_NUM in", values, "stockNum");
            return (Criteria) this;
        }

        public Criteria andStockNumNotIn(List<String> values) {
            addCriterion("STOCK_NUM not in", values, "stockNum");
            return (Criteria) this;
        }

        public Criteria andStockNumBetween(String value1, String value2) {
            addCriterion("STOCK_NUM between", value1, value2, "stockNum");
            return (Criteria) this;
        }

        public Criteria andStockNumNotBetween(String value1, String value2) {
            addCriterion("STOCK_NUM not between", value1, value2, "stockNum");
            return (Criteria) this;
        }

        public Criteria andIncreaseYesterdayIsNull() {
            addCriterion("INCREASE_YESTERDAY is null");
            return (Criteria) this;
        }

        public Criteria andIncreaseYesterdayIsNotNull() {
            addCriterion("INCREASE_YESTERDAY is not null");
            return (Criteria) this;
        }

        public Criteria andIncreaseYesterdayEqualTo(Double value) {
            addCriterion("INCREASE_YESTERDAY =", value, "increaseYesterday");
            return (Criteria) this;
        }

        public Criteria andIncreaseYesterdayNotEqualTo(Double value) {
            addCriterion("INCREASE_YESTERDAY <>", value, "increaseYesterday");
            return (Criteria) this;
        }

        public Criteria andIncreaseYesterdayGreaterThan(Double value) {
            addCriterion("INCREASE_YESTERDAY >", value, "increaseYesterday");
            return (Criteria) this;
        }

        public Criteria andIncreaseYesterdayGreaterThanOrEqualTo(Double value) {
            addCriterion("INCREASE_YESTERDAY >=", value, "increaseYesterday");
            return (Criteria) this;
        }

        public Criteria andIncreaseYesterdayLessThan(Double value) {
            addCriterion("INCREASE_YESTERDAY <", value, "increaseYesterday");
            return (Criteria) this;
        }

        public Criteria andIncreaseYesterdayLessThanOrEqualTo(Double value) {
            addCriterion("INCREASE_YESTERDAY <=", value, "increaseYesterday");
            return (Criteria) this;
        }

        public Criteria andIncreaseYesterdayIn(List<Double> values) {
            addCriterion("INCREASE_YESTERDAY in", values, "increaseYesterday");
            return (Criteria) this;
        }

        public Criteria andIncreaseYesterdayNotIn(List<Double> values) {
            addCriterion("INCREASE_YESTERDAY not in", values, "increaseYesterday");
            return (Criteria) this;
        }

        public Criteria andIncreaseYesterdayBetween(Double value1, Double value2) {
            addCriterion("INCREASE_YESTERDAY between", value1, value2, "increaseYesterday");
            return (Criteria) this;
        }

        public Criteria andIncreaseYesterdayNotBetween(Double value1, Double value2) {
            addCriterion("INCREASE_YESTERDAY not between", value1, value2, "increaseYesterday");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastThreedayIsNull() {
            addCriterion("INCREASE_LAST_THREEDAY is null");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastThreedayIsNotNull() {
            addCriterion("INCREASE_LAST_THREEDAY is not null");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastThreedayEqualTo(Double value) {
            addCriterion("INCREASE_LAST_THREEDAY =", value, "increaseLastThreeday");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastThreedayNotEqualTo(Double value) {
            addCriterion("INCREASE_LAST_THREEDAY <>", value, "increaseLastThreeday");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastThreedayGreaterThan(Double value) {
            addCriterion("INCREASE_LAST_THREEDAY >", value, "increaseLastThreeday");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastThreedayGreaterThanOrEqualTo(Double value) {
            addCriterion("INCREASE_LAST_THREEDAY >=", value, "increaseLastThreeday");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastThreedayLessThan(Double value) {
            addCriterion("INCREASE_LAST_THREEDAY <", value, "increaseLastThreeday");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastThreedayLessThanOrEqualTo(Double value) {
            addCriterion("INCREASE_LAST_THREEDAY <=", value, "increaseLastThreeday");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastThreedayIn(List<Double> values) {
            addCriterion("INCREASE_LAST_THREEDAY in", values, "increaseLastThreeday");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastThreedayNotIn(List<Double> values) {
            addCriterion("INCREASE_LAST_THREEDAY not in", values, "increaseLastThreeday");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastThreedayBetween(Double value1, Double value2) {
            addCriterion("INCREASE_LAST_THREEDAY between", value1, value2, "increaseLastThreeday");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastThreedayNotBetween(Double value1, Double value2) {
            addCriterion("INCREASE_LAST_THREEDAY not between", value1, value2, "increaseLastThreeday");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastWeekIsNull() {
            addCriterion("INCREASE_LAST_WEEK is null");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastWeekIsNotNull() {
            addCriterion("INCREASE_LAST_WEEK is not null");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastWeekEqualTo(Double value) {
            addCriterion("INCREASE_LAST_WEEK =", value, "increaseLastWeek");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastWeekNotEqualTo(Double value) {
            addCriterion("INCREASE_LAST_WEEK <>", value, "increaseLastWeek");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastWeekGreaterThan(Double value) {
            addCriterion("INCREASE_LAST_WEEK >", value, "increaseLastWeek");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastWeekGreaterThanOrEqualTo(Double value) {
            addCriterion("INCREASE_LAST_WEEK >=", value, "increaseLastWeek");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastWeekLessThan(Double value) {
            addCriterion("INCREASE_LAST_WEEK <", value, "increaseLastWeek");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastWeekLessThanOrEqualTo(Double value) {
            addCriterion("INCREASE_LAST_WEEK <=", value, "increaseLastWeek");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastWeekIn(List<Double> values) {
            addCriterion("INCREASE_LAST_WEEK in", values, "increaseLastWeek");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastWeekNotIn(List<Double> values) {
            addCriterion("INCREASE_LAST_WEEK not in", values, "increaseLastWeek");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastWeekBetween(Double value1, Double value2) {
            addCriterion("INCREASE_LAST_WEEK between", value1, value2, "increaseLastWeek");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastWeekNotBetween(Double value1, Double value2) {
            addCriterion("INCREASE_LAST_WEEK not between", value1, value2, "increaseLastWeek");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastMonthIsNull() {
            addCriterion("INCREASE_LAST_MONTH is null");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastMonthIsNotNull() {
            addCriterion("INCREASE_LAST_MONTH is not null");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastMonthEqualTo(Double value) {
            addCriterion("INCREASE_LAST_MONTH =", value, "increaseLastMonth");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastMonthNotEqualTo(Double value) {
            addCriterion("INCREASE_LAST_MONTH <>", value, "increaseLastMonth");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastMonthGreaterThan(Double value) {
            addCriterion("INCREASE_LAST_MONTH >", value, "increaseLastMonth");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastMonthGreaterThanOrEqualTo(Double value) {
            addCriterion("INCREASE_LAST_MONTH >=", value, "increaseLastMonth");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastMonthLessThan(Double value) {
            addCriterion("INCREASE_LAST_MONTH <", value, "increaseLastMonth");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastMonthLessThanOrEqualTo(Double value) {
            addCriterion("INCREASE_LAST_MONTH <=", value, "increaseLastMonth");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastMonthIn(List<Double> values) {
            addCriterion("INCREASE_LAST_MONTH in", values, "increaseLastMonth");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastMonthNotIn(List<Double> values) {
            addCriterion("INCREASE_LAST_MONTH not in", values, "increaseLastMonth");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastMonthBetween(Double value1, Double value2) {
            addCriterion("INCREASE_LAST_MONTH between", value1, value2, "increaseLastMonth");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastMonthNotBetween(Double value1, Double value2) {
            addCriterion("INCREASE_LAST_MONTH not between", value1, value2, "increaseLastMonth");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastHalfYearIsNull() {
            addCriterion("INCREASE_LAST_HALF_YEAR is null");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastHalfYearIsNotNull() {
            addCriterion("INCREASE_LAST_HALF_YEAR is not null");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastHalfYearEqualTo(Double value) {
            addCriterion("INCREASE_LAST_HALF_YEAR =", value, "increaseLastHalfYear");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastHalfYearNotEqualTo(Double value) {
            addCriterion("INCREASE_LAST_HALF_YEAR <>", value, "increaseLastHalfYear");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastHalfYearGreaterThan(Double value) {
            addCriterion("INCREASE_LAST_HALF_YEAR >", value, "increaseLastHalfYear");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastHalfYearGreaterThanOrEqualTo(Double value) {
            addCriterion("INCREASE_LAST_HALF_YEAR >=", value, "increaseLastHalfYear");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastHalfYearLessThan(Double value) {
            addCriterion("INCREASE_LAST_HALF_YEAR <", value, "increaseLastHalfYear");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastHalfYearLessThanOrEqualTo(Double value) {
            addCriterion("INCREASE_LAST_HALF_YEAR <=", value, "increaseLastHalfYear");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastHalfYearIn(List<Double> values) {
            addCriterion("INCREASE_LAST_HALF_YEAR in", values, "increaseLastHalfYear");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastHalfYearNotIn(List<Double> values) {
            addCriterion("INCREASE_LAST_HALF_YEAR not in", values, "increaseLastHalfYear");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastHalfYearBetween(Double value1, Double value2) {
            addCriterion("INCREASE_LAST_HALF_YEAR between", value1, value2, "increaseLastHalfYear");
            return (Criteria) this;
        }

        public Criteria andIncreaseLastHalfYearNotBetween(Double value1, Double value2) {
            addCriterion("INCREASE_LAST_HALF_YEAR not between", value1, value2, "increaseLastHalfYear");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeIsNull() {
            addCriterion("CREATED_TIME is null");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeIsNotNull() {
            addCriterion("CREATED_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeEqualTo(Date value) {
            addCriterion("CREATED_TIME =", value, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeNotEqualTo(Date value) {
            addCriterion("CREATED_TIME <>", value, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeGreaterThan(Date value) {
            addCriterion("CREATED_TIME >", value, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATED_TIME >=", value, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeLessThan(Date value) {
            addCriterion("CREATED_TIME <", value, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeLessThanOrEqualTo(Date value) {
            addCriterion("CREATED_TIME <=", value, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeIn(List<Date> values) {
            addCriterion("CREATED_TIME in", values, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeNotIn(List<Date> values) {
            addCriterion("CREATED_TIME not in", values, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeBetween(Date value1, Date value2) {
            addCriterion("CREATED_TIME between", value1, value2, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeNotBetween(Date value1, Date value2) {
            addCriterion("CREATED_TIME not between", value1, value2, "createdTime");
            return (Criteria) this;
        }

        public Criteria andUpdatedTimeIsNull() {
            addCriterion("UPDATED_TIME is null");
            return (Criteria) this;
        }

        public Criteria andUpdatedTimeIsNotNull() {
            addCriterion("UPDATED_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatedTimeEqualTo(Date value) {
            addCriterion("UPDATED_TIME =", value, "updatedTime");
            return (Criteria) this;
        }

        public Criteria andUpdatedTimeNotEqualTo(Date value) {
            addCriterion("UPDATED_TIME <>", value, "updatedTime");
            return (Criteria) this;
        }

        public Criteria andUpdatedTimeGreaterThan(Date value) {
            addCriterion("UPDATED_TIME >", value, "updatedTime");
            return (Criteria) this;
        }

        public Criteria andUpdatedTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("UPDATED_TIME >=", value, "updatedTime");
            return (Criteria) this;
        }

        public Criteria andUpdatedTimeLessThan(Date value) {
            addCriterion("UPDATED_TIME <", value, "updatedTime");
            return (Criteria) this;
        }

        public Criteria andUpdatedTimeLessThanOrEqualTo(Date value) {
            addCriterion("UPDATED_TIME <=", value, "updatedTime");
            return (Criteria) this;
        }

        public Criteria andUpdatedTimeIn(List<Date> values) {
            addCriterion("UPDATED_TIME in", values, "updatedTime");
            return (Criteria) this;
        }

        public Criteria andUpdatedTimeNotIn(List<Date> values) {
            addCriterion("UPDATED_TIME not in", values, "updatedTime");
            return (Criteria) this;
        }

        public Criteria andUpdatedTimeBetween(Date value1, Date value2) {
            addCriterion("UPDATED_TIME between", value1, value2, "updatedTime");
            return (Criteria) this;
        }

        public Criteria andUpdatedTimeNotBetween(Date value1, Date value2) {
            addCriterion("UPDATED_TIME not between", value1, value2, "updatedTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table stock
     *
     * @mbg.generated do_not_delete_during_merge Wed Mar 04 20:59:48 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table stock
     *
     * @mbg.generated Wed Mar 04 20:59:48 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}